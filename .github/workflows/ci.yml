name: CI/CD Pipeline

on:
  push:
    branches: [main, master, beta]
  pull_request:
    branches: [main, master, beta]

env:
  NODE_VERSION: '22.x'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run quality checks
        uses: ./.github/actions/quality-checks

      - name: Build extension
        uses: ./.github/actions/build-extension
        with:
          build-mode: production
          upload-artifacts: true
          artifact-retention-days: 7

      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info
        continue-on-error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run security audit
        uses: ./.github/actions/security-audit

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, security]
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/beta') && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-package

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  publish:
    name: Publish Extension
    runs-on: ubuntu-latest
    needs: [release]
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-package

      - name: Publish Extension
        uses: ./.github/actions/publish-extension
        with:
          vsce-token: ${{ secrets.VSCE_PAT }}
          ovsx-token: ${{ secrets.OVSX_PAT }}
          publish-vscode: true
          publish-openvsx: true
